<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.serverlessworkflow</groupId>
        <artifactId>serverlessworkflow-parent</artifactId>
        <version>8.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>serverlessworkflow-api</artifactId>
    <name>Serverless Workflow :: API</name>
    <packaging>jar</packaging>
    <description>Java SDK for Serverless Workflow Specification</description>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
          <groupId>com.networknt</groupId>
          <artifactId>json-schema-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.hibernate.validator</groupId>
          <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
          <groupId>org.glassfish.expressly</groupId>
          <artifactId>expressly</artifactId>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.jsonschema2pojo</groupId>
                <artifactId>jsonschema2pojo-maven-plugin</artifactId>
                <configuration>
                   <sourceDirectory>${basedir}/src/main/resources/schema</sourceDirectory>
                   <!--The comment below is left intentionally in case jsonschema2pojo one day accepts https urls. That day we can remove the file from schema dir and use directly the real schema-->
                   <!-- <sourcePaths>
                      <sourcePath>https://raw.githubusercontent.com/serverlessworkflow/specification/main/schema/workflow.yaml</sourcePath>
                    </sourcePaths> -->
                    <sourceType>yamlschema</sourceType>
                    <targetPackage>io.serverlessworkflow.api.types</targetPackage>
                    <outputDirectory>${project.build.directory}/generated-sources/src/main/java</outputDirectory>
                    <includeJsr303Annotations>true</includeJsr303Annotations>
                    <generateBuilders>true</generateBuilders>
                    <initializeCollections>true</initializeCollections>
                    <includeAdditionalProperties>true</includeAdditionalProperties>
                    <includeToString>false</includeToString>
                    <includeHashcodeAndEquals>false</includeHashcodeAndEquals>
                    <includeConstructors>true</includeConstructors>
                    <constructorsRequiredPropertiesOnly>true</constructorsRequiredPropertiesOnly>
                    <useTitleAsClassname>true</useTitleAsClassname>
                    <serializable>true</serializable>
                    <targetVersion>${java.version}</targetVersion>
                    <usePrimitives>true</usePrimitives>
                    <useJakartaValidation>true</useJakartaValidation>
                    <customRuleFactory>io.serverlessworkflow.generator.UnreferencedFactory</customRuleFactory>
                    <customAnnotator>io.serverlessworkflow.generator.ConstAnnotator</customAnnotator>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>io.serverlessworkflow</groupId>
                        <artifactId>serverless-workflow-custom-generator</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
